Warning message:
In ensureInitialized() :
  '.Random.seed[1]' is not a valid integer, so ignored

Attaching package: ‘jsonlite’

The following object is masked from ‘package:shiny’:

    validate

── Attaching packages ─────────────────────────────────────── tidyverse 1.2.1 ──
✔ ggplot2 3.2.1     ✔ purrr   0.3.2
✔ tibble  2.1.3     ✔ dplyr   0.8.3
✔ tidyr   1.0.0     ✔ stringr 1.3.1
✔ readr   1.3.1     ✔ forcats 0.4.0
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter()      masks stats::filter()
✖ purrr::flatten()     masks jsonlite::flatten()
✖ dplyr::lag()         masks stats::lag()
✖ jsonlite::validate() masks shiny::validate()

Attaching package: ‘shinyjs’

The following object is masked from ‘package:shiny’:

    runExample

The following objects are masked from ‘package:methods’:

    removeClass, show


Attaching package: ‘DT’

The following objects are masked from ‘package:shiny’:

    dataTableOutput, renderDataTable

Parsed with column specification:
cols(
  work_id = col_double(),
  instrument_id = col_double(),
  starting_location = col_double(),
  total_appearances = col_double(),
  sequence = col_character(),
  relative_seqence = col_character(),
  n_gram_count = col_double()
)
Parsed with column specification:
cols(
  work_id = col_double(),
  instrument_id = col_double(),
  starting_location = col_double(),
  starting_location_as_decimal = col_double(),
  note_name_sequence = col_character(),
  note_name_without_octave_sequence = col_character(),
  note_name_and_duration_sequence = col_character(),
  note_name_without_octave_and_duration_sequence = col_character(),
  duration_sequence = col_character(),
  melodic_sequence = col_character(),
  melodic_and_duration_sequence = col_character(),
  melodic_sequence_relative = col_character()
)
Parsed with column specification:
cols(
  time_signature_numerator = col_double(),
  divisions = col_double(),
  starting_location = col_double(),
  minimised_chord_all_parts = col_character(),
  non_minimised_chord_all_parts = col_character(),
  chord_midi_list = col_character(),
  chord_midi_list_no_doubling = col_character(),
  has_unison_doubling = col_double(),
  has_octave_doubling = col_double(),
  bass_note_midi_number = col_double(),
  starting_location_as_decimal_position = col_double()
)
Parsed with column specification:
cols(
  current_measure = col_double(),
  instruments_present = col_character(),
  end_measure = col_double(),
  combination_measure_count = col_double()
)

Listening on http://127.0.0.1:37933
Parsed with column specification:
cols(
  work_id = col_double(),
  instrument_id = col_double(),
  starting_location = col_double(),
  total_appearances = col_double(),
  sequence = col_character(),
  relative_seqence = col_character(),
  n_gram_count = col_double()
)
Parsed with column specification:
cols(
  work_id = col_double(),
  instrument_id = col_double(),
  starting_location = col_double(),
  starting_location_as_decimal = col_double(),
  note_name_sequence = col_character(),
  note_name_without_octave_sequence = col_character(),
  note_name_and_duration_sequence = col_character(),
  note_name_without_octave_and_duration_sequence = col_character(),
  duration_sequence = col_character(),
  melodic_sequence = col_character(),
  melodic_and_duration_sequence = col_character(),
  melodic_sequence_relative = col_character()
)
Parsed with column specification:
cols(
  time_signature_numerator = col_double(),
  divisions = col_double(),
  starting_location = col_double(),
  minimised_chord_all_parts = col_character(),
  non_minimised_chord_all_parts = col_character(),
  chord_midi_list = col_character(),
  chord_midi_list_no_doubling = col_character(),
  has_unison_doubling = col_double(),
  has_octave_doubling = col_double(),
  bass_note_midi_number = col_double(),
  starting_location_as_decimal_position = col_double()
)
Parsed with column specification:
cols(
  current_measure = col_double(),
  instruments_present = col_character(),
  end_measure = col_double(),
  combination_measure_count = col_double()
)
Parsed with column specification:
cols(
  work_id = col_double(),
  instrument_id = col_double(),
  starting_location = col_double(),
  total_appearances = col_double(),
  sequence = col_character(),
  relative_seqence = col_character(),
  n_gram_count = col_double()
)
Parsed with column specification:
cols(
  work_id = col_double(),
  instrument_id = col_double(),
  starting_location = col_double(),
  starting_location_as_decimal = col_double(),
  note_name_sequence = col_character(),
  note_name_without_octave_sequence = col_character(),
  note_name_and_duration_sequence = col_character(),
  note_name_without_octave_and_duration_sequence = col_character(),
  duration_sequence = col_character(),
  melodic_sequence = col_character(),
  melodic_and_duration_sequence = col_character(),
  melodic_sequence_relative = col_character()
)
Parsed with column specification:
cols(
  time_signature_numerator = col_double(),
  divisions = col_double(),
  starting_location = col_double(),
  minimised_chord_all_parts = col_character(),
  non_minimised_chord_all_parts = col_character(),
  chord_midi_list = col_character(),
  chord_midi_list_no_doubling = col_character(),
  has_unison_doubling = col_double(),
  has_octave_doubling = col_double(),
  bass_note_midi_number = col_double(),
  starting_location_as_decimal_position = col_double()
)
Parsed with column specification:
cols(
  current_measure = col_double(),
  instruments_present = col_character(),
  end_measure = col_double(),
  combination_measure_count = col_double()
)
Parsed with column specification:
cols(
  work_id = col_double(),
  instrument_id = col_double(),
  starting_location = col_double(),
  total_appearances = col_double(),
  sequence = col_character(),
  relative_seqence = col_character(),
  n_gram_count = col_double()
)
Parsed with column specification:
cols(
  work_id = col_double(),
  instrument_id = col_double(),
  starting_location = col_double(),
  starting_location_as_decimal = col_double(),
  note_name_sequence = col_character(),
  note_name_without_octave_sequence = col_character(),
  note_name_and_duration_sequence = col_character(),
  note_name_without_octave_and_duration_sequence = col_character(),
  duration_sequence = col_character(),
  melodic_sequence = col_character(),
  melodic_and_duration_sequence = col_character(),
  melodic_sequence_relative = col_character()
)
Parsed with column specification:
cols(
  time_signature_numerator = col_double(),
  divisions = col_double(),
  starting_location = col_double(),
  minimised_chord_all_parts = col_character(),
  non_minimised_chord_all_parts = col_character(),
  chord_midi_list = col_character(),
  chord_midi_list_no_doubling = col_character(),
  has_unison_doubling = col_double(),
  has_octave_doubling = col_double(),
  bass_note_midi_number = col_double(),
  starting_location_as_decimal_position = col_double()
)
Parsed with column specification:
cols(
  current_measure = col_double(),
  instruments_present = col_character(),
  end_measure = col_double(),
  combination_measure_count = col_double()
)


